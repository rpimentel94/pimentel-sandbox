<?php

use Drupal\Core\Render\BubbleableMetadata;
use Drupal\media\Entity\Media;
use Drupal\file\Entity\File;

/**
 * Implements hook_token_info()
 */

function htlf_tokens_token_info()
{

    $loader = \Drupal::service('domain.negotiator');
    $current_domain = $loader->getActiveDomain();
    $active_domain = $current_domain->id();
    $token_sheet = 'htlf_tokens.' . $active_domain . '.settings';

    $token_sheet = \Drupal::config($token_sheet);

    $token_sheet_data = unserialize($token_sheet->get('token_sheet_data'));

    $types = $tokens = [];


    foreach ($token_sheet_data as $key => $token_values) {

        //Generate the Types For These Subsections
        if (!array_key_exists($key, $types)) {
            $types[$key] = [
                'name' => t('HTLF Tokens - ' . strtoupper($key)),
                'description' => t('Custom Token for site use across all Division banks')
            ];
        }

        if (!array_key_exists($key, $tokens)) {
            $tokens[$key] = [];
        }

        //Start to bundle the values to their parent type
        foreach ($token_values as $token_key => $value) {
            $tokens[$key][$token_key] = [
                'name' => $value['name'],
                'dynamic' => FALSE,
                'description' => $value['name']
            ];
        }
    }

    return [
        'types' => $types,
        'tokens' => $tokens,
    ];
}


/**
 * Implements hook_tokens()
 */

// function htlf_tokens_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata)
// {
//     $replacements = [];


//     return $replacements;
// }